/*
 * This file is generated by jOOQ.
 */
package jooq.alring_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.alring_dsl.tables.AlringExchangeRate;

import org.jooq.Field;
import org.jooq.Record15;
import org.jooq.Record2;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlringExchangeRateRecord extends UpdatableRecordImpl<AlringExchangeRateRecord> implements Record15<String, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, LocalDateTime> {

    private static final long serialVersionUID = -1114338509;

    /**
     * Setter for <code>stock.exchange_rate.currency_code</code>. 통화
     */
    public AlringExchangeRateRecord setCurrencyCode(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.currency_code</code>. 통화
     */
    public String getCurrencyCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>stock.exchange_rate.KRW</code>. 원 한국
     */
    public AlringExchangeRateRecord setKrw(Double value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.KRW</code>. 원 한국
     */
    public Double getKrw() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>stock.exchange_rate.JPY</code>. 엔 일본
     */
    public AlringExchangeRateRecord setJpy(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.JPY</code>. 엔 일본
     */
    public Double getJpy() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>stock.exchange_rate.CNY</code>. 위안 중국
     */
    public AlringExchangeRateRecord setCny(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.CNY</code>. 위안 중국
     */
    public Double getCny() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>stock.exchange_rate.TWD</code>. 대만달러 대만
     */
    public AlringExchangeRateRecord setTwd(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.TWD</code>. 대만달러 대만
     */
    public Double getTwd() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>stock.exchange_rate.HKD</code>. 홍콩달러 홍콩
     */
    public AlringExchangeRateRecord setHkd(Double value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.HKD</code>. 홍콩달러 홍콩
     */
    public Double getHkd() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>stock.exchange_rate.USD</code>. 달러 미국
     */
    public AlringExchangeRateRecord setUsd(Double value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.USD</code>. 달러 미국
     */
    public Double getUsd() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>stock.exchange_rate.GBP</code>. 파운드 영국
     */
    public AlringExchangeRateRecord setGbp(Double value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.GBP</code>. 파운드 영국
     */
    public Double getGbp() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>stock.exchange_rate.EUR</code>. 유로 유럽연합
     */
    public AlringExchangeRateRecord setEur(Double value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.EUR</code>. 유로 유럽연합
     */
    public Double getEur() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>stock.exchange_rate.RUB</code>. 루블 러시아
     */
    public AlringExchangeRateRecord setRub(Double value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.RUB</code>. 루블 러시아
     */
    public Double getRub() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>stock.exchange_rate.TL</code>. 리라 터키
     */
    public AlringExchangeRateRecord setTl(Double value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.TL</code>. 리라 터키
     */
    public Double getTl() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>stock.exchange_rate.CHF</code>. 스위스프랑 스위스
     */
    public AlringExchangeRateRecord setChf(Double value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.CHF</code>. 스위스프랑 스위스
     */
    public Double getChf() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>stock.exchange_rate.SEK</code>. 크로나 스웨덴
     */
    public AlringExchangeRateRecord setSek(Double value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.SEK</code>. 크로나 스웨덴
     */
    public Double getSek() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>stock.exchange_rate.PLN</code>. 즐로티 폴란드
     */
    public AlringExchangeRateRecord setPln(Double value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.PLN</code>. 즐로티 폴란드
     */
    public Double getPln() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>stock.exchange_rate.update_date</code>.
     */
    public AlringExchangeRateRecord setUpdateDate(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>stock.exchange_rate.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, LocalDateTime> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<String, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, LocalDateTime> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<String, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, LocalDateTime> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AlringExchangeRate.EXCHANGE_RATE.CURRENCY_CODE;
    }

    @Override
    public Field<Double> field2() {
        return AlringExchangeRate.EXCHANGE_RATE.KRW;
    }

    @Override
    public Field<Double> field3() {
        return AlringExchangeRate.EXCHANGE_RATE.JPY;
    }

    @Override
    public Field<Double> field4() {
        return AlringExchangeRate.EXCHANGE_RATE.CNY;
    }

    @Override
    public Field<Double> field5() {
        return AlringExchangeRate.EXCHANGE_RATE.TWD;
    }

    @Override
    public Field<Double> field6() {
        return AlringExchangeRate.EXCHANGE_RATE.HKD;
    }

    @Override
    public Field<Double> field7() {
        return AlringExchangeRate.EXCHANGE_RATE.USD;
    }

    @Override
    public Field<Double> field8() {
        return AlringExchangeRate.EXCHANGE_RATE.GBP;
    }

    @Override
    public Field<Double> field9() {
        return AlringExchangeRate.EXCHANGE_RATE.EUR;
    }

    @Override
    public Field<Double> field10() {
        return AlringExchangeRate.EXCHANGE_RATE.RUB;
    }

    @Override
    public Field<Double> field11() {
        return AlringExchangeRate.EXCHANGE_RATE.TL;
    }

    @Override
    public Field<Double> field12() {
        return AlringExchangeRate.EXCHANGE_RATE.CHF;
    }

    @Override
    public Field<Double> field13() {
        return AlringExchangeRate.EXCHANGE_RATE.SEK;
    }

    @Override
    public Field<Double> field14() {
        return AlringExchangeRate.EXCHANGE_RATE.PLN;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return AlringExchangeRate.EXCHANGE_RATE.UPDATE_DATE;
    }

    @Override
    public String component1() {
        return getCurrencyCode();
    }

    @Override
    public Double component2() {
        return getKrw();
    }

    @Override
    public Double component3() {
        return getJpy();
    }

    @Override
    public Double component4() {
        return getCny();
    }

    @Override
    public Double component5() {
        return getTwd();
    }

    @Override
    public Double component6() {
        return getHkd();
    }

    @Override
    public Double component7() {
        return getUsd();
    }

    @Override
    public Double component8() {
        return getGbp();
    }

    @Override
    public Double component9() {
        return getEur();
    }

    @Override
    public Double component10() {
        return getRub();
    }

    @Override
    public Double component11() {
        return getTl();
    }

    @Override
    public Double component12() {
        return getChf();
    }

    @Override
    public Double component13() {
        return getSek();
    }

    @Override
    public Double component14() {
        return getPln();
    }

    @Override
    public LocalDateTime component15() {
        return getUpdateDate();
    }

    @Override
    public String value1() {
        return getCurrencyCode();
    }

    @Override
    public Double value2() {
        return getKrw();
    }

    @Override
    public Double value3() {
        return getJpy();
    }

    @Override
    public Double value4() {
        return getCny();
    }

    @Override
    public Double value5() {
        return getTwd();
    }

    @Override
    public Double value6() {
        return getHkd();
    }

    @Override
    public Double value7() {
        return getUsd();
    }

    @Override
    public Double value8() {
        return getGbp();
    }

    @Override
    public Double value9() {
        return getEur();
    }

    @Override
    public Double value10() {
        return getRub();
    }

    @Override
    public Double value11() {
        return getTl();
    }

    @Override
    public Double value12() {
        return getChf();
    }

    @Override
    public Double value13() {
        return getSek();
    }

    @Override
    public Double value14() {
        return getPln();
    }

    @Override
    public LocalDateTime value15() {
        return getUpdateDate();
    }

    @Override
    public AlringExchangeRateRecord value1(String value) {
        setCurrencyCode(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value2(Double value) {
        setKrw(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value3(Double value) {
        setJpy(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value4(Double value) {
        setCny(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value5(Double value) {
        setTwd(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value6(Double value) {
        setHkd(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value7(Double value) {
        setUsd(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value8(Double value) {
        setGbp(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value9(Double value) {
        setEur(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value10(Double value) {
        setRub(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value11(Double value) {
        setTl(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value12(Double value) {
        setChf(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value13(Double value) {
        setSek(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value14(Double value) {
        setPln(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord value15(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public AlringExchangeRateRecord values(String value1, Double value2, Double value3, Double value4, Double value5, Double value6, Double value7, Double value8, Double value9, Double value10, Double value11, Double value12, Double value13, Double value14, LocalDateTime value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlringExchangeRateRecord
     */
    public AlringExchangeRateRecord() {
        super(AlringExchangeRate.EXCHANGE_RATE);
    }

    /**
     * Create a detached, initialised AlringExchangeRateRecord
     */
    public AlringExchangeRateRecord(String currencyCode, Double krw, Double jpy, Double cny, Double twd, Double hkd, Double usd, Double gbp, Double eur, Double rub, Double tl, Double chf, Double sek, Double pln, LocalDateTime updateDate) {
        super(AlringExchangeRate.EXCHANGE_RATE);

        set(0, currencyCode);
        set(1, krw);
        set(2, jpy);
        set(3, cny);
        set(4, twd);
        set(5, hkd);
        set(6, usd);
        set(7, gbp);
        set(8, eur);
        set(9, rub);
        set(10, tl);
        set(11, chf);
        set(12, sek);
        set(13, pln);
        set(14, updateDate);
    }
}
