/*
 * This file is generated by jOOQ.
 */
package jooq.alring_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.alring_dsl.tables.AlringStock;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlringStockRecord extends UpdatableRecordImpl<AlringStockRecord> implements Record8<Integer, String, String, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = -526573128;

    /**
     * Setter for <code>stock.stock.stock_no</code>. 주식 번호
     */
    public AlringStockRecord setStockNo(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.stock_no</code>. 주식 번호
     */
    public Integer getStockNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stock.stock.country_code</code>. 나라 코드
     */
    public AlringStockRecord setCountryCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.country_code</code>. 나라 코드
     */
    public String getCountryCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>stock.stock.stock_name</code>.
     */
    public AlringStockRecord setStockName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.stock_name</code>.
     */
    public String getStockName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stock.stock.currency_code</code>. 통화
     */
    public AlringStockRecord setCurrencyCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.currency_code</code>. 통화
     */
    public String getCurrencyCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stock.stock.industry_code</code>. 산업코드
     */
    public AlringStockRecord setIndustryCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.industry_code</code>. 산업코드
     */
    public String getIndustryCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>stock.stock.market_code</code>. 마켓코드
     */
    public AlringStockRecord setMarketCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.market_code</code>. 마켓코드
     */
    public String getMarketCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>stock.stock.status</code>. 상태값 (YES,NO)
     */
    public AlringStockRecord setStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.status</code>. 상태값 (YES,NO)
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>stock.stock.update_date</code>. 업데이트 날짜
     */
    public AlringStockRecord setUpdateDate(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>stock.stock.update_date</code>. 업데이트 날짜
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AlringStock.STOCK_.STOCK_NO;
    }

    @Override
    public Field<String> field2() {
        return AlringStock.STOCK_.COUNTRY_CODE;
    }

    @Override
    public Field<String> field3() {
        return AlringStock.STOCK_.STOCK_NAME;
    }

    @Override
    public Field<String> field4() {
        return AlringStock.STOCK_.CURRENCY_CODE;
    }

    @Override
    public Field<String> field5() {
        return AlringStock.STOCK_.INDUSTRY_CODE;
    }

    @Override
    public Field<String> field6() {
        return AlringStock.STOCK_.MARKET_CODE;
    }

    @Override
    public Field<String> field7() {
        return AlringStock.STOCK_.STATUS;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return AlringStock.STOCK_.UPDATE_DATE;
    }

    @Override
    public Integer component1() {
        return getStockNo();
    }

    @Override
    public String component2() {
        return getCountryCode();
    }

    @Override
    public String component3() {
        return getStockName();
    }

    @Override
    public String component4() {
        return getCurrencyCode();
    }

    @Override
    public String component5() {
        return getIndustryCode();
    }

    @Override
    public String component6() {
        return getMarketCode();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdateDate();
    }

    @Override
    public Integer value1() {
        return getStockNo();
    }

    @Override
    public String value2() {
        return getCountryCode();
    }

    @Override
    public String value3() {
        return getStockName();
    }

    @Override
    public String value4() {
        return getCurrencyCode();
    }

    @Override
    public String value5() {
        return getIndustryCode();
    }

    @Override
    public String value6() {
        return getMarketCode();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdateDate();
    }

    @Override
    public AlringStockRecord value1(Integer value) {
        setStockNo(value);
        return this;
    }

    @Override
    public AlringStockRecord value2(String value) {
        setCountryCode(value);
        return this;
    }

    @Override
    public AlringStockRecord value3(String value) {
        setStockName(value);
        return this;
    }

    @Override
    public AlringStockRecord value4(String value) {
        setCurrencyCode(value);
        return this;
    }

    @Override
    public AlringStockRecord value5(String value) {
        setIndustryCode(value);
        return this;
    }

    @Override
    public AlringStockRecord value6(String value) {
        setMarketCode(value);
        return this;
    }

    @Override
    public AlringStockRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public AlringStockRecord value8(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public AlringStockRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlringStockRecord
     */
    public AlringStockRecord() {
        super(AlringStock.STOCK_);
    }

    /**
     * Create a detached, initialised AlringStockRecord
     */
    public AlringStockRecord(Integer stockNo, String countryCode, String stockName, String currencyCode, String industryCode, String marketCode, String status, LocalDateTime updateDate) {
        super(AlringStock.STOCK_);

        set(0, stockNo);
        set(1, countryCode);
        set(2, stockName);
        set(3, currencyCode);
        set(4, industryCode);
        set(5, marketCode);
        set(6, status);
        set(7, updateDate);
    }
}
