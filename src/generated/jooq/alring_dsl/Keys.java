/*
 * This file is generated by jOOQ.
 */
package jooq.alring_dsl;


import jooq.alring_dsl.tables.AlringCountry;
import jooq.alring_dsl.tables.AlringExchangeRate;
import jooq.alring_dsl.tables.AlringStock;
import jooq.alring_dsl.tables.AlringStockPrice;
import jooq.alring_dsl.tables.records.AlringCountryRecord;
import jooq.alring_dsl.tables.records.AlringExchangeRateRecord;
import jooq.alring_dsl.tables.records.AlringStockPriceRecord;
import jooq.alring_dsl.tables.records.AlringStockRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>stock</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AlringStockRecord, Integer> IDENTITY_STOCK_ = Identities0.IDENTITY_STOCK_;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AlringCountryRecord> KEY_COUNTRY_PRIMARY = UniqueKeys0.KEY_COUNTRY_PRIMARY;
    public static final UniqueKey<AlringExchangeRateRecord> KEY_EXCHANGE_RATE_PRIMARY = UniqueKeys0.KEY_EXCHANGE_RATE_PRIMARY;
    public static final UniqueKey<AlringStockRecord> KEY_STOCK_PRIMARY = UniqueKeys0.KEY_STOCK_PRIMARY;
    public static final UniqueKey<AlringStockPriceRecord> KEY_STOCK_PRICE_PRIMARY = UniqueKeys0.KEY_STOCK_PRICE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AlringStockRecord, Integer> IDENTITY_STOCK_ = Internal.createIdentity(AlringStock.STOCK_, AlringStock.STOCK_.STOCK_NO);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AlringCountryRecord> KEY_COUNTRY_PRIMARY = Internal.createUniqueKey(AlringCountry.COUNTRY, "KEY_country_PRIMARY", new TableField[] { AlringCountry.COUNTRY.COUNTRY_CODE }, true);
        public static final UniqueKey<AlringExchangeRateRecord> KEY_EXCHANGE_RATE_PRIMARY = Internal.createUniqueKey(AlringExchangeRate.EXCHANGE_RATE, "KEY_exchange_rate_PRIMARY", new TableField[] { AlringExchangeRate.EXCHANGE_RATE.CURRENCY_CODE, AlringExchangeRate.EXCHANGE_RATE.UPDATE_DATE }, true);
        public static final UniqueKey<AlringStockRecord> KEY_STOCK_PRIMARY = Internal.createUniqueKey(AlringStock.STOCK_, "KEY_stock_PRIMARY", new TableField[] { AlringStock.STOCK_.STOCK_NO }, true);
        public static final UniqueKey<AlringStockPriceRecord> KEY_STOCK_PRICE_PRIMARY = Internal.createUniqueKey(AlringStockPrice.STOCK_PRICE, "KEY_stock_price_PRIMARY", new TableField[] { AlringStockPrice.STOCK_PRICE.STOCK_NO, AlringStockPrice.STOCK_PRICE.UPDATE_DATE }, true);
    }
}
